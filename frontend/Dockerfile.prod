# Étape 1 : Build de l'application Angular
FROM node:22 AS build
WORKDIR /app

# Copier uniquement les fichiers de dépendances pour optimiser le cache Docker
COPY package.json package-lock.json ./
RUN npm ci --legacy-peer-deps

# Copier le reste des fichiers source
COPY . ./

# Construire l’application Angular en mode production
RUN npm run build --configuration=production

# Étape 2 : Lancer l'application Angular avec Nginx
FROM nginx:alpine

# Définir un utilisateur non-root pour la sécurité
RUN addgroup -g 1001 -S nginx && adduser -u 1001 -S nginx -G nginx

# Copier la configuration Nginx personnalisée
COPY nginx.conf /etc/nginx/nginx.conf

# Copier les fichiers construits depuis l’étape de build
COPY --from=build /app/dist /usr/share/nginx/html

# Donner les permissions nécessaires
RUN chown -R nginx:nginx /usr/share/nginx/html

# Exposer le port 80
EXPOSE 80

# Changer l’utilisateur par défaut pour éviter d’exécuter Nginx en root
USER nginx

# Lancer Nginx
CMD ["nginx", "-g", "daemon off;"]
